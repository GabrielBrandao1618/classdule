generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                String        @id @default(uuid())
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  name              String        @db.VarChar(255)
  birthDay          DateTime
  email             String        @unique @db.VarChar(255)
  password          String        @db.VarChar(255)
  classrooms        Classroom[]
  groupsResponsible Group[]       @relation("educator")
  Checkins          Checkin[]
  memberOnGroups    Membership[]
}

model Group {
  id                    String        @id @default(uuid())
  name                  String        @unique @db.VarChar(255)
  location              String        @db.VarChar(255)
  responsibleEducator   User          @relation(fields: [responsibleEducatorId], references: [id], "educator")
  responsibleEducatorId String
  Classroom             Classroom[]
  memberships               Membership[]

  @@index([responsibleEducatorId])
}

model Membership {
  id      String          @id @default(uuid()) @db.VarChar(255)
  user    User            @relation(fields: [userId], references: [id])
  group   Group           @relation(fields: [groupId], references: [id])
  userId  String
  groupId String
  role  UserGroupRole

  @@index([userId])
  @@index([groupId])
}

model Classroom {
  id         String             @id @default(uuid()) @db.VarChar(255)
  type       String             @db.VarChar(255)
  educator   User               @relation(fields: [educatorId], references: [id])
  group      Group              @relation(fields: [groupId], references: [id])
  startsAt   DateTime           @db.Time()
  endsAt     DateTime           @db.Time()
  checkins   Checkin[]
  weekdays   ClassroomWeekday[]
  content    ClassroomContent[]
  educatorId String
  groupId    String

  @@index([educatorId])
  @@index([groupId])
}

model ClassroomWeekday {
  id         String      @id @default(uuid()) @db.VarChar(255)
  classrooms Classroom[]
  weekday    Int         @unique
}

model ClassroomContent {
  id         String      @id @default(uuid()) @db.VarChar(255)
  content    String      @unique
  classrooms Classroom[]
}

model Checkin {
  id          String    @id @default(uuid()) @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  verified    Boolean   @default(false)
  User        User      @relation(fields: [userId], references: [id])
  userId      String    @db.VarChar(255)
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String    @db.VarChar(255)

  @@index([userId])
  @@index([classroomId])
}

enum UserGroupRole {
  PENDING
  MEMBER
  EDUCATOR
}
