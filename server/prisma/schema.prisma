generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Graduation {
  id    String @id @default(uuid())
  name  String @unique @db.VarChar(255)
  value Int    @unique @db.UnsignedInt
  User  User[]
}

model User {
  id                  String      @id @default(uuid())
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  name                String      @unique @db.VarChar(255)
  birthDay            DateTime
  currentGraduation   Graduation  @relation(fields: [graduationId], references: [id])
  graduationId        String
  currentGrade        Int         @default(0)
  educatorOnAcademies Academy[]   @relation("educators")
  classrooms          Classroom[]
  password            String      @db.VarChar(255)
  Academy             Academy[]
  Checkins             Checkin[]
}

model Academy {
  id                    String      @id @default(uuid())
  name                  String      @unique @db.VarChar(255)
  location              String      @db.VarChar(255)
  responsibleEducator   User        @relation(fields: [responsibleEducatorId], references: [id])
  responsibleEducatorId String
  educators             User[]      @relation("educators")
  Classroom             Classroom[]
}

model Classroom {
  id         String             @id @default(uuid()) @db.VarChar(255)
  type       String             @db.VarChar(255)
  educator   User               @relation(fields: [educatorId], references: [id])
  educatorId String
  academy    Academy            @relation(fields: [academyId], references: [id])
  academyId  String
  startsAt   DateTime           @db.Time()
  endsAt     DateTime           @db.Time()
  checkins    Checkin[]
  weekdays   ClassroomWeekday[]
}

model ClassroomWeekday {
  id         String      @id @default(uuid()) @db.VarChar(255)
  classrooms Classroom[]
  weekday    Int @unique
}

model Checkin {
  id          String    @id @default(uuid()) @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  verified    Boolean   @default(false)
  User        User      @relation(fields: [userId], references: [id])
  userId      String    @db.VarChar(255)
  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId String    @db.VarChar(255)
}
